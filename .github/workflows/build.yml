name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        name: [linux, windows, macos]
        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/release/${{ env.BINARY_NAME }}
#            asset_name: ${{ BINARY_NAME }}
          - name: windows
            os: windows-latest
            artifact_name: "target/release/${{ env.BINARY_NAME }}"
#            asset_name: ${{ BINARY_NAME }}
          - name: macos
            os: macos-latest
            artifact_name: target/release/${{ env.BINARY_NAME }}
#            asset_name: ${{ BINARY_NAME }}
    runs-on: ${{ matrix.platform }}
    env:
      BINARY_NAME: ${{ github.event.repository.name }} # Uses repository name by default, CHANGE IF THE NAME OF YOUR CRATE IS DIFFERENT
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        # with:
        #  workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn' # Set this to npm, yarn or pnpm.
      
      #- name: Install app dependencies and build web
      #  # Remove `&& yarn build` if you build your frontend in `beforeBuildCommand`
      #  run: yarn # Change this to npm, yarn or pnpm.

      - name: Build
        run: cargo build --release --locked

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.BINARY_NAME }}
          path: ${{ matrix.artifact_name }}
          
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
 #         asset_name: ${{ matrix.asset_name }}-${{ matrix.name }}
          tag: ${{ github.ref }}
          overwrite: true
